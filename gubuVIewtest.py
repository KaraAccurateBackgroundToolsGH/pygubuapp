import os
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.scrolledtext import ScrolledText

import pygubu

PROJECT_PATH = os.path.abspath(os.path.dirname(__file__))
PROJECT_UI = os.path.join(PROJECT_PATH, "ID_exporterVer2.0.ui")

class IdExporterver20App:
    def __init__(self, master=None):
        # build ui
        self.mainFrame = ttk.Frame(master)
        self.notebook4 = ttk.Notebook(self.mainFrame)
        self.tab1frame = ttk.Frame(self.notebook4)
        self.exporterLabel = ttk.Label(self.tab1frame)
        self.mainLabel = tk.IntVar(value='ID Exporter')
        self.exporterLabel.configure(anchor='ne', borderwidth='2', compound='top', font='{Arial CYR} 14 {bold}')
        self.exporterLabel.configure(foreground='#276a70', relief='flat', state='disabled', style='Toolbutton')
        self.exporterLabel.configure(takefocus=True, text='ID Exporter', textvariable=self.mainLabel)
        self.exporterLabel.grid(column='0', row='0')
        self.leftFrame = ttk.Frame(self.tab1frame)
        self.ID_entry = ScrolledText(self.leftFrame)
        self.ID_entry.configure(autoseparators='true', background='#f7fcfd', blockcursor='true', borderwidth='1')
        self.ID_entry.configure(height='12', highlightbackground='#69c4cb', highlightthickness='1', setgrid='false')
        self.ID_entry.configure(state='normal', tabstyle='wordprocessor', takefocus=False, undo='true')
        self.ID_entry.configure(width='20')
        self.ID_entry.pack(side='top')
        self.enterButton = tk.Button(self.leftFrame)
        self.enterButton.configure(background='#8ceaea', justify='left', relief='raised', text='Enter')
        self.enterButton.pack(expand='true',ipadx='13', padx='55', pady='10', side='top')
        self.leftFrame.configure(height='200', padding='10', relief='flat', width='200')
        self.leftFrame.grid(column='0', row='1')
        self.rightFrame = tk.Frame(self.tab1frame)
        self.inputATMbutton = tk.Button(self.rightFrame)
        self.inputATMbutton.configure(background='#8ceaea', foreground='#030a07', justify='left', padx='22')
        self.inputATMbutton.configure(relief='raised', text='Input to ATM')
        self.inputATMbutton.grid(column='0', pady='10', row='0')
        self.sendGSTDBsheetButton = tk.Button(self.rightFrame)
        self.sendGSTDBsheetButton.configure(background='#8ceaea', compound='top', text='Send to GSTDB sheet')
        self.sendGSTDBsheetButton.grid(column='0', pady='10', row='1')
        self.makeGSTDBfoldersButton = tk.Button(self.rightFrame)
        self.makeGSTDBfoldersButton.configure(background='#8ceaea', justify='left', text='Make GSTDB folders')
        self.makeGSTDBfoldersButton.grid(column='0', pady='10', row='2')
        self.CTsearchSetupButton = tk.Button(self.rightFrame)
        self.CTsearchSetupButton.configure(background='#8ceaea', cursor='arrow', justify='left', padx='13')
        self.CTsearchSetupButton.configure(relief='raised', text='CT search setup')
        self.CTsearchSetupButton.grid(column='0', pady='10', row='3')
        self.rightFrame.configure(height='170', highlightbackground='#bcb5e6', highlightcolor='#a8bef2')
        self.rightFrame.configure(padx='20', pady='20', takefocus=False, width='200')
        self.rightFrame.grid(column='2', row='1', sticky='n')
        self.tab1frame.columnconfigure('2', pad='0')
        self.tab1frame.configure(borderwidth='2', height='400', relief='flat', takefocus=True)
        self.tab1frame.configure(width='600')
        self.tab1frame.pack()
        self.notebook4.add(self.tab1frame, compound='center', state='normal', sticky='nw', text='Main')
        self.tab2frame = ttk.Frame(self.notebook4)
        self.tab2label = ttk.Label(self.tab2frame)
        self.tab2label.configure(borderwidth='2', compound='top', font='{Arial CYR} 14 {bold}', foreground='#276a70')
        self.tab2label.configure(justify='left', relief='flat', state='disabled', takefocus=True)
        self.tab2label.configure(text='Send to')
        self.tab2label.pack(anchor='nw', padx='50', side='top')
        self.Buttonframe2 = tk.Frame(self.tab2frame, container='false')
        self.send2FM_sheet = tk.Button(self.Buttonframe2)
        self.send2FM_sheet.configure(background='#8ceaea', foreground='#030a07', justify='left', padx='5')
        self.send2FM_sheet.configure(relief='raised', text='Send to FM sheet', width='10')
        self.send2FM_sheet.pack(expand='true', fill='x', pady='15', side='top')
        self.send2followup = tk.Button(self.Buttonframe2)
        self.send2followup.configure(background='#8ceaea', cursor='arrow', relief='raised', text='Send to follow up sheet')
        self.send2followup.pack(fill='x', pady='15', side='top')
        self.button26 = tk.Button(self.Buttonframe2)
        self.button26.configure(background='#8ceaea', justify='center', takefocus=False, text='Send to ID archive')
        self.button26.pack(fill='x', pady='15', side='top')
        self.button27 = tk.Button(self.Buttonframe2)
        self.button27.configure(background='#8ceaea', cursor='arrow', justify='center', overrelief='raised')
        self.button27.configure(padx='20', relief='raised', state='normal', text='Send to GSTDB sheet')
        self.button27.configure(width='10')
        self.button27.pack(fill='x', pady='15', side='top')
        self.Buttonframe2.configure(height='170', highlightbackground='#bcb5e6', highlightcolor='#a8bef2')
        self.Buttonframe2.configure(padx='20', pady='20', takefocus=False, width='100')
        self.Buttonframe2.pack(anchor='w', side='right')
        self.LeftFrame2 = tk.Frame(self.tab2frame)
        self.message1 = tk.Message(self.LeftFrame2)
        self.message1.configure(anchor='center', highlightbackground='#00c6c6', highlightcolor='#00c6c6', highlightthickness='2')
        self.message1.configure(relief='flat', takefocus=False, text='id_list', width='200')
        self.message1.pack(expand='true', fill='both', side='top')
        self.LeftFrame2.configure(borderwidth='1', height='200', highlightbackground='#00ffff', highlightcolor='#00ffff')
        self.LeftFrame2.configure(padx='30', pady='20', relief='flat', takefocus=False)
        self.LeftFrame2.configure(width='180')
        self.LeftFrame2.pack(fill='both', side='left')
        self.LeftFrame2.pack_propagate(0)
        self.tab2frame.configure(height='400', relief='flat', width='600')
        self.tab2frame.pack(side='top')
        self.notebook4.add(self.tab2frame, compound='top', sticky='n', text='Send To')
        self.frame13 = ttk.Frame(self.notebook4)
        self.frame14 = tk.Frame(self.frame13, container='false')
        self.frame14.configure(background='#dadada', height='170', highlightbackground='#bcb5e6', highlightcolor='#a8bef2')
        self.frame14.configure(padx='20', pady='20', takefocus=False, width='100')
        self.frame14.pack(anchor='e', side='right')
        self.frame13.configure(height='400', relief='sunken', width='600')
        self.frame13.pack(side='right')
        self.frame13.pack_propagate(0)
        self.notebook4.add(self.frame13, text='Tools')
        self.frame15 = ttk.Frame(self.notebook4)
        self.frame16 = tk.Frame(self.frame15, container='false')
        self.frame16.configure(background='#dadada', height='170', highlightbackground='#bcb5e6', highlightcolor='#a8bef2')
        self.frame16.configure(padx='20', pady='20', takefocus=False, width='100')
        self.frame16.pack(anchor='e', side='right')
        self.frame15.configure(height='400', relief='sunken', width='600')
        self.frame15.pack(side='right')
        self.frame15.pack_propagate(0)
        self.notebook4.add(self.frame15, text='ETA dates')
        self.notebook4.configure(height='290', width='400')
        self.notebook4.pack(side='top')
        self.mainFrame.configure(height='200', width='200')
        self.mainFrame.pack(side='top')

        # Main widget
        self.mainwindow = self.mainFrame


    def run(self):
        self.mainwindow.mainloop()


if __name__ == '__main__':
    root = tk.Tk()
    app = IdExporterver20App(root)
    app.run()

